{"version":3,"sources":["utils/createContact.js","components/phoneBookList.js","components/filter.js","components/contactForm.js","App.js","index.js"],"names":["createContact","name","number","id","uuidv4","PhoneBookList","contacts","onRemoveContact","map","key","type","onClick","Filter","filter","onChangeFilter","value","onChange","ContactForm","onHandleSubmit","onHandleChange","onSubmit","required","Phonebook","state","handleChange","e","target","setState","handleSubmit","preventDefault","contactName","toLowerCase","find","contact","alert","addContact","changeFilter","prevState","getContacts","includes","toLocaleLowerCase","removeContact","contactId","this","length","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8e2884f9.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function createContact(name, number) {\r\n  return {\r\n    name: name,\r\n    id: uuidv4(),\r\n    number: number,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import PhoneBookItem from \"./phoneBookItem\";\r\nconst PhoneBookList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, number, name }) => (\r\n      <li key={id}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button type=\"button\" onClick={() => onRemoveContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nPhoneBookList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.oneOfType([\r\n        PropTypes.string.isRequired,\r\n        PropTypes.number.isRequired,\r\n      ]),\r\n    })\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\nexport default PhoneBookList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <>\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input type=\"text\" value={filter} onChange={onChangeFilter} />\r\n    </label>\r\n  </>\r\n);\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst ContactForm = ({ onHandleSubmit, onHandleChange, name, number }) => (\r\n  <form onSubmit={onHandleSubmit}>\r\n    <label>\r\n      Name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onHandleChange}\r\n        required\r\n      />\r\n    </label>\r\n    <br />\r\n    <label>\r\n      Contact\r\n      <br />\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        onChange={onHandleChange}\r\n        required\r\n      />\r\n    </label>\r\n    <br />\r\n    <br />\r\n    <button type=\"submit\" value=\"submit\">\r\n      Add contact\r\n    </button>\r\n  </form>\r\n);\r\nContactForm.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\nimport createContact from \"./utils/createContact\";\nimport PhoneBookList from \"./components/phoneBookList\";\nimport Filter from \"./components/filter\";\nimport ContactForm from \"./components/contactForm\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { contacts, name } = this.state;\n    const contactName = name.toLowerCase();\n    contacts.find((contact) => contact.name.toLowerCase() === contactName)\n      ? alert(`${name} already in your contact list`)\n      : this.addContact();\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  addContact = () => {\n    const { name, number } = this.state;\n    const contact = createContact(name, number);\n    this.setState((prevState) => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(\n          (contact) => contact.id !== contactId\n        ),\n      };\n    });\n  };\n  render() {\n    const { contacts, name, number, filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onHandleSubmit={this.handleSubmit}\n          onHandleChange={this.handleChange}\n          name={name}\n          number={number}\n        />\n        <br />\n        {contacts.length > 1 && (\n          <Filter filter={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        <PhoneBookList\n          contacts={this.getContacts()}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Phonebook from \"./App\";\n\nReactDOM.render(<Phonebook />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}